{"ast":null,"code":"var _jsxFileName = \"/Users/pau/Desktop/GitHub/Ad-hoc_medical_data_processing_toward_integration_with_existing_data_platforms/src/pages/TestDetails.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestDetails = ({\n  testData\n}) => {\n  // Verifica si testData y testData.data existen antes de usarlos\n  if (!testData || !testData.data || !testData.pascon) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No hay datos disponibles para este test.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Asumiendo que los datos de tiempo, SPO2 y HR vienen de `testData`\n  const timeValues = testData.data.map(entry => entry.t);\n  const spoValues = testData.data.map(entry => entry.s);\n  const hrValues = testData.data.map(entry => entry.h);\n  const checkpointTimes = testData.pascon.map(entry => entry.t);\n  const checkpointSpo = testData.pascon.map(entry => entry.s);\n  const checkpointHr = testData.pascon.map(entry => entry.h);\n\n  // Datos para el gráfico de SPO2 y HR\n  const spo2HrData = {\n    labels: timeValues,\n    datasets: [{\n      label: 'SPO2',\n      data: spoValues,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      fill: false\n    }, {\n      label: 'Heart Rate',\n      data: hrValues,\n      borderColor: 'red',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      fill: false\n    }]\n  };\n\n  // Datos para los checkpoints\n  const checkpointData = {\n    labels: checkpointTimes,\n    datasets: [{\n      label: 'Checkpoint SPO2',\n      data: checkpointSpo,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      fill: false,\n      pointStyle: 'circle',\n      pointRadius: 5\n    }, {\n      label: 'Checkpoint HR',\n      data: checkpointHr,\n      borderColor: 'red',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      fill: false,\n      pointStyle: 'circle',\n      pointRadius: 5\n    }]\n  };\n\n  // Opciones de los gráficos\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'SPO2 and Heart Rate over Time'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Checkpoints Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: checkpointData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"SPO2 and Heart Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: spo2HrData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c = TestDetails;\nexport default TestDetails;\nvar _c;\n$RefreshReg$(_c, \"TestDetails\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","TestDetails","testData","data","pascon","children","fileName","_jsxFileName","lineNumber","columnNumber","timeValues","map","entry","t","spoValues","s","hrValues","h","checkpointTimes","checkpointSpo","checkpointHr","spo2HrData","labels","datasets","label","borderColor","backgroundColor","fill","checkpointData","pointStyle","pointRadius","options","responsive","plugins","legend","position","title","display","text","_c","$RefreshReg$"],"sources":["/Users/pau/Desktop/GitHub/Ad-hoc_medical_data_processing_toward_integration_with_existing_data_platforms/src/pages/TestDetails.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nconst TestDetails = ({ testData }) => {\n  // Verifica si testData y testData.data existen antes de usarlos\n  if (!testData || !testData.data || !testData.pascon) {\n    return <div>No hay datos disponibles para este test.</div>;\n  }\n\n  // Asumiendo que los datos de tiempo, SPO2 y HR vienen de `testData`\n  const timeValues = testData.data.map((entry) => entry.t);\n  const spoValues = testData.data.map((entry) => entry.s);\n  const hrValues = testData.data.map((entry) => entry.h);\n\n  const checkpointTimes = testData.pascon.map((entry) => entry.t);\n  const checkpointSpo = testData.pascon.map((entry) => entry.s);\n  const checkpointHr = testData.pascon.map((entry) => entry.h);\n\n  // Datos para el gráfico de SPO2 y HR\n  const spo2HrData = {\n    labels: timeValues,\n    datasets: [\n      {\n        label: 'SPO2',\n        data: spoValues,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        fill: false,\n      },\n      {\n        label: 'Heart Rate',\n        data: hrValues,\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        fill: false,\n      },\n    ],\n  };\n\n  // Datos para los checkpoints\n  const checkpointData = {\n    labels: checkpointTimes,\n    datasets: [\n      {\n        label: 'Checkpoint SPO2',\n        data: checkpointSpo,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        fill: false,\n        pointStyle: 'circle',\n        pointRadius: 5,\n      },\n      {\n        label: 'Checkpoint HR',\n        data: checkpointHr,\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        fill: false,\n        pointStyle: 'circle',\n        pointRadius: 5,\n      },\n    ],\n  };\n\n  // Opciones de los gráficos\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'SPO2 and Heart Rate over Time',\n      },\n    },\n  };\n\n  return (\n    <div>\n      <h2>Test Details</h2>\n\n      {/* Gráfico de Checkpoints */}\n      <div>\n        <h3>Checkpoints Graph</h3>\n        <Line data={checkpointData} options={options} />\n      </div>\n\n      {/* Gráfico de SPO2 y HR */}\n      <div>\n        <h3>SPO2 and Heart Rate</h3>\n        <Line data={spo2HrData} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default TestDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}