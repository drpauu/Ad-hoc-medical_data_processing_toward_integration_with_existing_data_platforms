{"ast":null,"code":"var _jsxFileName = \"/Users/pau/Desktop/GitHub/Ad-hoc_medical_data_processing_toward_integration_with_existing_data_platforms/src/pages/TestDetails.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport database from '../data/database.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestDetails = () => {\n  const testData = database.data;\n\n  // Extraer los datos para las gráficas\n  const spoData = testData.map(item => ({\n    x: item.t,\n    y: item.s\n  }));\n  const hrData = testData.map(item => ({\n    x: item.t,\n    y: item.h\n  }));\n\n  // Extraer los datos para los checkpoints\n  const checkpointTimes = database.pascon.map(item => item.t);\n  const checkpointSpo = database.pascon.map(item => item.s);\n  const checkpointHr = database.pascon.map(item => item.h);\n\n  // Datos para la gráfica de SPO2 y HR\n  const spo2HrData = {\n    labels: spoData.map(d => d.x),\n    // Tiempo en el eje X\n    datasets: [{\n      label: 'SPO2',\n      data: spoData.map(d => d.y),\n      borderColor: 'rgba(75,192,192,1)',\n      fill: false,\n      tension: 0.1,\n      pointRadius: 5,\n      // Marcar puntos de control\n      pointBackgroundColor: 'rgba(75,192,192,1)'\n    }, {\n      label: 'HR',\n      data: hrData.map(d => d.y),\n      borderColor: 'rgba(255,99,132,1)',\n      fill: false,\n      tension: 0.1,\n      pointRadius: 5,\n      // Marcar puntos de control\n      pointBackgroundColor: 'rgba(255,99,132,1)'\n    }]\n  };\n\n  // Datos para la gráfica de checkpoints\n  const checkpointData = {\n    labels: checkpointTimes,\n    datasets: [{\n      label: 'Checkpoint SPO2',\n      data: checkpointSpo,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      fill: false,\n      pointRadius: 0 // Eliminar los puntos de control\n    }, {\n      label: 'Checkpoint HR',\n      data: checkpointHr,\n      borderColor: 'red',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      fill: false,\n      pointRadius: 0 // Eliminar los puntos de control\n    }]\n  };\n\n  // Opciones comunes para los gráficos\n  const chartOptions = {\n    scales: {\n      x: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Time (s)'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Value'\n        },\n        ticks: {\n          stepSize: 1 // Que cuente de 1 en 1\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Checkpoints Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: checkpointData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"SPO2 and Heart Rate Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: spo2HrData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"General Test Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"O2 Prescribed: \", database.test.o2 || 'No existeix']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Patient ID: \", database.test.pid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Doctor ID: \", database.test.did]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pulsiox\\xEDmetre ID: \", database.test.pulsid]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Initial Basals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Saturation (spo): \", database.initial.spo || 'No existeix']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Heart Rate (hr): \", database.initial.hr || 'No existeix']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dispnea (d): \", database.initial.d || 'No existeix']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fatiga (f): \", database.initial.f || 'No existeix']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Final Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Meters Walked: \", database.final.meters || 'No existeix', \" mts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dispnea (d): \", database.final.d || 'No existeix']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fatiga (f): \", database.final.f || 'No existeix']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Final Rest SPO2: \", database.final.end_rest_spo || 'No existeix']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Final Rest HR: \", database.final.end_rest_hr || 'No existeix']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Comments: \", database.final.comment || 'No existeix']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_c = TestDetails;\nexport default TestDetails;\n\n/*import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport database from '../data/database.json';\n\nconst TestDetails = () => {\n  const { id } = useParams(); // Obtenemos el ID del test desde la URL\n  const testData = database.test; // Accedemos directamente al objeto test en el JSON\n\n  // Verificamos si el ID del test coincide con el ID proporcionado en la URL\n  if (testData.tid !== id) {\n    return <div>Test no encontrado</div>;\n  }\n\n  const initialData = database.initial || {};\n  const finalData = database.final || {};\n  const pasconData = database.pascon || [];\n  const stopsData = database.stops || [];\n\n  // Función para obtener un valor o \"No existeix\" si no está disponible\n  const getValue = (value) => (value !== undefined && value !== null) ? value : \"No existeix\";\n\n  return (\n    <div>\n      <h2>Detalles del Test</h2>\n      <div>\n        <h3>General Test Data</h3>\n        <p>O2 Prescribed: {getValue(testData.o2)}</p>\n        <p>Patient ID: {getValue(testData.pid)}</p>\n        <p>Doctor ID: {getValue(testData.did)}</p>\n        <p>Pulsioxímetre ID: {getValue(testData.pulsid)}</p>\n      </div>\n\n      <div>\n        <h3>Initial Basals</h3>\n        <p>Saturation (spo): {getValue(initialData.spo)}</p>\n        <p>Heart Rate (hr): {getValue(initialData.hr)}</p>\n        <p>Dispnea (d): {getValue(initialData.d)}</p>\n        <p>Fatiga (f): {getValue(initialData.f)}</p>\n      </div>\n\n      <div>\n        <h3>Final Values</h3>\n        <p>Meters Walked: {getValue(finalData.meters)} mts</p>\n        <p>Dispnea (d): {getValue(finalData.d)}</p>\n        <p>Fatiga (f): {getValue(finalData.f)}</p>\n        <p>Final Rest SPO2: {getValue(finalData.end_rest_spo)}</p>\n        <p>Final Rest HR: {getValue(finalData.end_rest_hr)}</p>\n        <p>Comments: {getValue(finalData.comment)}</p>\n      </div>\n\n      <div>\n        <h3>Passes to the Cone</h3>\n        {pasconData.length > 0 ? (\n          pasconData.map((pass, index) => (\n            <div key={index}>\n              <p>Pass #{pass.n}: Time: {getValue(pass.t)} s, SPO2: {getValue(pass.s)}, HR: {getValue(pass.h)}</p>\n            </div>\n          ))\n        ) : (\n          <p>No existeix</p>\n        )}\n      </div>\n\n      <div>\n        <h3>Stops</h3>\n        {stopsData.length > 0 ? (\n          stopsData.map((stop, index) => (\n            <div key={index}>\n              <p>Stop #{index + 1}: Time: {getValue(stop.time)} s, Duration: {getValue(stop.len)} s</p>\n            </div>\n          ))\n        ) : (\n          <p>No existeix</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TestDetails;\n*/\nvar _c;\n$RefreshReg$(_c, \"TestDetails\");","map":{"version":3,"names":["React","Line","database","jsxDEV","_jsxDEV","TestDetails","testData","data","spoData","map","item","x","t","y","s","hrData","h","checkpointTimes","pascon","checkpointSpo","checkpointHr","spo2HrData","labels","d","datasets","label","borderColor","fill","tension","pointRadius","pointBackgroundColor","checkpointData","backgroundColor","chartOptions","scales","type","title","display","text","ticks","stepSize","children","fileName","_jsxFileName","lineNumber","columnNumber","options","test","o2","pid","did","pulsid","initial","spo","hr","f","final","meters","end_rest_spo","end_rest_hr","comment","_c","$RefreshReg$"],"sources":["/Users/pau/Desktop/GitHub/Ad-hoc_medical_data_processing_toward_integration_with_existing_data_platforms/src/pages/TestDetails.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport database from '../data/database.json';\n\nconst TestDetails = () => {\n    const testData = database.data;\n\n    // Extraer los datos para las gráficas\n    const spoData = testData.map(item => ({ x: item.t, y: item.s }));\n    const hrData = testData.map(item => ({ x: item.t, y: item.h }));\n\n    // Extraer los datos para los checkpoints\n    const checkpointTimes = database.pascon.map(item => item.t);\n    const checkpointSpo = database.pascon.map(item => item.s);\n    const checkpointHr = database.pascon.map(item => item.h);\n\n    // Datos para la gráfica de SPO2 y HR\n    const spo2HrData = {\n        labels: spoData.map(d => d.x), // Tiempo en el eje X\n        datasets: [\n            {\n                label: 'SPO2',\n                data: spoData.map(d => d.y),\n                borderColor: 'rgba(75,192,192,1)',\n                fill: false,\n                tension: 0.1,\n                pointRadius: 5, // Marcar puntos de control\n                pointBackgroundColor: 'rgba(75,192,192,1)',\n            },\n            {\n                label: 'HR',\n                data: hrData.map(d => d.y),\n                borderColor: 'rgba(255,99,132,1)',\n                fill: false,\n                tension: 0.1,\n                pointRadius: 5, // Marcar puntos de control\n                pointBackgroundColor: 'rgba(255,99,132,1)',\n            }\n        ]\n    };\n\n    // Datos para la gráfica de checkpoints\n    const checkpointData = {\n        labels: checkpointTimes,\n        datasets: [\n            {\n                label: 'Checkpoint SPO2',\n                data: checkpointSpo,\n                borderColor: 'blue',\n                backgroundColor: 'rgba(54, 162, 235, 0.2)',\n                fill: false,\n                pointRadius: 0, // Eliminar los puntos de control\n            },\n            {\n                label: 'Checkpoint HR',\n                data: checkpointHr,\n                borderColor: 'red',\n                backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                fill: false,\n                pointRadius: 0, // Eliminar los puntos de control\n            },\n        ],\n    };\n\n    // Opciones comunes para los gráficos\n    const chartOptions = {\n        scales: {\n            x: {\n                type: 'linear',\n                title: {\n                    display: true,\n                    text: 'Time (s)',\n                },\n            },\n            y: {\n                title: {\n                    display: true,\n                    text: 'Value',\n                },\n                ticks: {\n                    stepSize: 1, // Que cuente de 1 en 1\n                }\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h2>Test Details</h2>\n\n            {/* Gráfico de Checkpoints */}\n            <div>\n                <h3>Checkpoints Graph</h3>\n                <Line data={checkpointData} options={chartOptions} />\n            </div>\n\n            {/* Gráfico de SPO2 y HR */}\n            <div>\n                <h3>SPO2 and Heart Rate Over Time</h3>\n                <Line data={spo2HrData} options={chartOptions} />\n            </div>\n\n            {/* Detalles del Test */}\n            <div>\n                <h3>General Test Data</h3>\n                <p>O2 Prescribed: {database.test.o2 || 'No existeix'}</p>\n                <p>Patient ID: {database.test.pid}</p>\n                <p>Doctor ID: {database.test.did}</p>\n                <p>Pulsioxímetre ID: {database.test.pulsid}</p>\n\n                <h3>Initial Basals</h3>\n                <p>Saturation (spo): {database.initial.spo || 'No existeix'}</p>\n                <p>Heart Rate (hr): {database.initial.hr || 'No existeix'}</p>\n                <p>Dispnea (d): {database.initial.d || 'No existeix'}</p>\n                <p>Fatiga (f): {database.initial.f || 'No existeix'}</p>\n\n                <h3>Final Values</h3>\n                <p>Meters Walked: {database.final.meters || 'No existeix'} mts</p>\n                <p>Dispnea (d): {database.final.d || 'No existeix'}</p>\n                <p>Fatiga (f): {database.final.f || 'No existeix'}</p>\n                <p>Final Rest SPO2: {database.final.end_rest_spo || 'No existeix'}</p>\n                <p>Final Rest HR: {database.final.end_rest_hr || 'No existeix'}</p>\n                <p>Comments: {database.final.comment || 'No existeix'}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default TestDetails;\n\n\n/*import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport database from '../data/database.json';\n\nconst TestDetails = () => {\n  const { id } = useParams(); // Obtenemos el ID del test desde la URL\n  const testData = database.test; // Accedemos directamente al objeto test en el JSON\n\n  // Verificamos si el ID del test coincide con el ID proporcionado en la URL\n  if (testData.tid !== id) {\n    return <div>Test no encontrado</div>;\n  }\n\n  const initialData = database.initial || {};\n  const finalData = database.final || {};\n  const pasconData = database.pascon || [];\n  const stopsData = database.stops || [];\n\n  // Función para obtener un valor o \"No existeix\" si no está disponible\n  const getValue = (value) => (value !== undefined && value !== null) ? value : \"No existeix\";\n\n  return (\n    <div>\n      <h2>Detalles del Test</h2>\n      <div>\n        <h3>General Test Data</h3>\n        <p>O2 Prescribed: {getValue(testData.o2)}</p>\n        <p>Patient ID: {getValue(testData.pid)}</p>\n        <p>Doctor ID: {getValue(testData.did)}</p>\n        <p>Pulsioxímetre ID: {getValue(testData.pulsid)}</p>\n      </div>\n\n      <div>\n        <h3>Initial Basals</h3>\n        <p>Saturation (spo): {getValue(initialData.spo)}</p>\n        <p>Heart Rate (hr): {getValue(initialData.hr)}</p>\n        <p>Dispnea (d): {getValue(initialData.d)}</p>\n        <p>Fatiga (f): {getValue(initialData.f)}</p>\n      </div>\n\n      <div>\n        <h3>Final Values</h3>\n        <p>Meters Walked: {getValue(finalData.meters)} mts</p>\n        <p>Dispnea (d): {getValue(finalData.d)}</p>\n        <p>Fatiga (f): {getValue(finalData.f)}</p>\n        <p>Final Rest SPO2: {getValue(finalData.end_rest_spo)}</p>\n        <p>Final Rest HR: {getValue(finalData.end_rest_hr)}</p>\n        <p>Comments: {getValue(finalData.comment)}</p>\n      </div>\n\n      <div>\n        <h3>Passes to the Cone</h3>\n        {pasconData.length > 0 ? (\n          pasconData.map((pass, index) => (\n            <div key={index}>\n              <p>Pass #{pass.n}: Time: {getValue(pass.t)} s, SPO2: {getValue(pass.s)}, HR: {getValue(pass.h)}</p>\n            </div>\n          ))\n        ) : (\n          <p>No existeix</p>\n        )}\n      </div>\n\n      <div>\n        <h3>Stops</h3>\n        {stopsData.length > 0 ? (\n          stopsData.map((stop, index) => (\n            <div key={index}>\n              <p>Stop #{index + 1}: Time: {getValue(stop.time)} s, Duration: {getValue(stop.len)} s</p>\n            </div>\n          ))\n        ) : (\n          <p>No existeix</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TestDetails;\n*/"],"mappings":"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AA,GAAG,iBAAe,EAACvC,QAAQ,CAACsD,KAAK,CAACG,WAAW,IAAI,aAAa;MAAA;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnEzC,OAAA;QAAAqC,QAAA,GAAG,YAAU,EAACvC,QAAQ,CAACsD,KAAK,CAACI,OAAO,IAAI,aAAa;MAAA;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACgB,EAAA,GA1HIxD,WAAW;AA4HjB,eAAeA,WAAW;;AAG1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}