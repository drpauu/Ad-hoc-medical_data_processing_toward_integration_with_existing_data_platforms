{"ast":null,"code":"export const getData = async () => {\n  try {\n    const response = await fetch('/database.json'); // Ruta al archivo JSON en la carpeta `public`\n    const jsonData = await response.json();\n    // Asegurarse de que jsonData.test es un array, o devolver un array vacío si no lo es\n    return jsonData.test || [];\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return []; // Devolver un array vacío en caso de error\n  }\n};","map":{"version":3,"names":["getData","response","fetch","jsonData","json","test","error","console"],"sources":["/Users/pau/Desktop/GitHub/Ad-hoc_medical_data_processing_toward_integration_with_existing_data_platforms/src/services/api.js"],"sourcesContent":["export const getData = async () => {\n  try {\n    const response = await fetch('/database.json');  // Ruta al archivo JSON en la carpeta `public`\n    const jsonData = await response.json();\n    // Asegurarse de que jsonData.test es un array, o devolver un array vacío si no lo es\n    return jsonData.test || [];\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return [];  // Devolver un array vacío en caso de error\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAE;IACjD,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACtC;IACA,OAAOD,QAAQ,CAACE,IAAI,IAAI,EAAE;EAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAE,CAAC,CAAE;EACd;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}