{"ast":null,"code":"var _jsxFileName = \"/Users/pau/Desktop/GitHub/Ad-hoc_medical_data_processing_toward_integration_with_existing_data_platforms/src/pages/TestDetails.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registrar los componentes de ChartJS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst TestDetails = () => {\n  // Datos estáticos de ejemplo\n  const timeValues = [1, 2, 3, 4, 5];\n  const spoValues = [90, 92, 95, 93, 94];\n  const hrValues = [70, 72, 74, 71, 73];\n  const checkpointTimes = [1, 3, 5];\n  const checkpointSpo = [90, 95, 94];\n  const checkpointHr = [70, 74, 73];\n  const spo2HrData = {\n    labels: timeValues,\n    datasets: [{\n      label: 'SPO2',\n      data: spoValues,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      fill: false\n    }, {\n      label: 'Heart Rate',\n      data: hrValues,\n      borderColor: 'red',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      fill: false\n    }]\n  };\n  const checkpointData = {\n    labels: checkpointTimes,\n    datasets: [{\n      label: 'Checkpoint SPO2',\n      data: checkpointSpo,\n      borderColor: 'blue',\n      backgroundColor: 'rgba(54, 162, 235, 0.2)',\n      fill: false,\n      pointStyle: 'circle',\n      pointRadius: 5\n    }, {\n      label: 'Checkpoint HR',\n      data: checkpointHr,\n      borderColor: 'red',\n      backgroundColor: 'rgba(255, 99, 132, 0.2)',\n      fill: false,\n      pointStyle: 'circle',\n      pointRadius: 5\n    }]\n  };\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'SPO2 and Heart Rate over Time'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Checkpoints Graph\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: checkpointData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"SPO2 and Heart Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: spo2HrData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_c = TestDetails;\nexport default TestDetails;\n\n/*import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport database from '../data/database.json';\n\nconst TestDetails = () => {\n  const { id } = useParams(); // Obtenemos el ID del test desde la URL\n  const testData = database.test; // Accedemos directamente al objeto test en el JSON\n\n  // Verificamos si el ID del test coincide con el ID proporcionado en la URL\n  if (testData.tid !== id) {\n    return <div>Test no encontrado</div>;\n  }\n\n  const initialData = database.initial || {};\n  const finalData = database.final || {};\n  const pasconData = database.pascon || [];\n  const stopsData = database.stops || [];\n\n  // Función para obtener un valor o \"No existeix\" si no está disponible\n  const getValue = (value) => (value !== undefined && value !== null) ? value : \"No existeix\";\n\n  return (\n    <div>\n      <h2>Detalles del Test</h2>\n      <div>\n        <h3>General Test Data</h3>\n        <p>O2 Prescribed: {getValue(testData.o2)}</p>\n        <p>Patient ID: {getValue(testData.pid)}</p>\n        <p>Doctor ID: {getValue(testData.did)}</p>\n        <p>Pulsioxímetre ID: {getValue(testData.pulsid)}</p>\n      </div>\n\n      <div>\n        <h3>Initial Basals</h3>\n        <p>Saturation (spo): {getValue(initialData.spo)}</p>\n        <p>Heart Rate (hr): {getValue(initialData.hr)}</p>\n        <p>Dispnea (d): {getValue(initialData.d)}</p>\n        <p>Fatiga (f): {getValue(initialData.f)}</p>\n      </div>\n\n      <div>\n        <h3>Final Values</h3>\n        <p>Meters Walked: {getValue(finalData.meters)} mts</p>\n        <p>Dispnea (d): {getValue(finalData.d)}</p>\n        <p>Fatiga (f): {getValue(finalData.f)}</p>\n        <p>Final Rest SPO2: {getValue(finalData.end_rest_spo)}</p>\n        <p>Final Rest HR: {getValue(finalData.end_rest_hr)}</p>\n        <p>Comments: {getValue(finalData.comment)}</p>\n      </div>\n\n      <div>\n        <h3>Passes to the Cone</h3>\n        {pasconData.length > 0 ? (\n          pasconData.map((pass, index) => (\n            <div key={index}>\n              <p>Pass #{pass.n}: Time: {getValue(pass.t)} s, SPO2: {getValue(pass.s)}, HR: {getValue(pass.h)}</p>\n            </div>\n          ))\n        ) : (\n          <p>No existeix</p>\n        )}\n      </div>\n\n      <div>\n        <h3>Stops</h3>\n        {stopsData.length > 0 ? (\n          stopsData.map((stop, index) => (\n            <div key={index}>\n              <p>Stop #{index + 1}: Time: {getValue(stop.time)} s, Duration: {getValue(stop.len)} s</p>\n            </div>\n          ))\n        ) : (\n          <p>No existeix</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TestDetails;\n*/\nvar _c;\n$RefreshReg$(_c, \"TestDetails\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","TestDetails","timeValues","spoValues","hrValues","checkpointTimes","checkpointSpo","checkpointHr","spo2HrData","labels","datasets","label","data","borderColor","backgroundColor","fill","checkpointData","pointStyle","pointRadius","options","responsive","plugins","legend","position","title","display","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/pau/Desktop/GitHub/Ad-hoc_medical_data_processing_toward_integration_with_existing_data_platforms/src/pages/TestDetails.js"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Registrar los componentes de ChartJS\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst TestDetails = () => {\n  // Datos estáticos de ejemplo\n  const timeValues = [1, 2, 3, 4, 5];\n  const spoValues = [90, 92, 95, 93, 94];\n  const hrValues = [70, 72, 74, 71, 73];\n\n  const checkpointTimes = [1, 3, 5];\n  const checkpointSpo = [90, 95, 94];\n  const checkpointHr = [70, 74, 73];\n\n  const spo2HrData = {\n    labels: timeValues,\n    datasets: [\n      {\n        label: 'SPO2',\n        data: spoValues,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        fill: false,\n      },\n      {\n        label: 'Heart Rate',\n        data: hrValues,\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        fill: false,\n      },\n    ],\n  };\n\n  const checkpointData = {\n    labels: checkpointTimes,\n    datasets: [\n      {\n        label: 'Checkpoint SPO2',\n        data: checkpointSpo,\n        borderColor: 'blue',\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        fill: false,\n        pointStyle: 'circle',\n        pointRadius: 5,\n      },\n      {\n        label: 'Checkpoint HR',\n        data: checkpointHr,\n        borderColor: 'red',\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\n        fill: false,\n        pointStyle: 'circle',\n        pointRadius: 5,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'SPO2 and Heart Rate over Time',\n      },\n    },\n  };\n\n  return (\n    <div>\n      <h2>Test Details</h2>\n\n      <div>\n        <h3>Checkpoints Graph</h3>\n        <Line data={checkpointData} options={options} />\n      </div>\n\n      <div>\n        <h3>SPO2 and Heart Rate</h3>\n        <Line data={spo2HrData} options={options} />\n      </div>\n    </div>\n  );\n};\n\nexport default TestDetails;\n\n/*import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport database from '../data/database.json';\n\nconst TestDetails = () => {\n  const { id } = useParams(); // Obtenemos el ID del test desde la URL\n  const testData = database.test; // Accedemos directamente al objeto test en el JSON\n\n  // Verificamos si el ID del test coincide con el ID proporcionado en la URL\n  if (testData.tid !== id) {\n    return <div>Test no encontrado</div>;\n  }\n\n  const initialData = database.initial || {};\n  const finalData = database.final || {};\n  const pasconData = database.pascon || [];\n  const stopsData = database.stops || [];\n\n  // Función para obtener un valor o \"No existeix\" si no está disponible\n  const getValue = (value) => (value !== undefined && value !== null) ? value : \"No existeix\";\n\n  return (\n    <div>\n      <h2>Detalles del Test</h2>\n      <div>\n        <h3>General Test Data</h3>\n        <p>O2 Prescribed: {getValue(testData.o2)}</p>\n        <p>Patient ID: {getValue(testData.pid)}</p>\n        <p>Doctor ID: {getValue(testData.did)}</p>\n        <p>Pulsioxímetre ID: {getValue(testData.pulsid)}</p>\n      </div>\n\n      <div>\n        <h3>Initial Basals</h3>\n        <p>Saturation (spo): {getValue(initialData.spo)}</p>\n        <p>Heart Rate (hr): {getValue(initialData.hr)}</p>\n        <p>Dispnea (d): {getValue(initialData.d)}</p>\n        <p>Fatiga (f): {getValue(initialData.f)}</p>\n      </div>\n\n      <div>\n        <h3>Final Values</h3>\n        <p>Meters Walked: {getValue(finalData.meters)} mts</p>\n        <p>Dispnea (d): {getValue(finalData.d)}</p>\n        <p>Fatiga (f): {getValue(finalData.f)}</p>\n        <p>Final Rest SPO2: {getValue(finalData.end_rest_spo)}</p>\n        <p>Final Rest HR: {getValue(finalData.end_rest_hr)}</p>\n        <p>Comments: {getValue(finalData.comment)}</p>\n      </div>\n\n      <div>\n        <h3>Passes to the Cone</h3>\n        {pasconData.length > 0 ? (\n          pasconData.map((pass, index) => (\n            <div key={index}>\n              <p>Pass #{pass.n}: Time: {getValue(pass.t)} s, SPO2: {getValue(pass.s)}, HR: {getValue(pass.h)}</p>\n            </div>\n          ))\n        ) : (\n          <p>No existeix</p>\n        )}\n      </div>\n\n      <div>\n        <h3>Stops</h3>\n        {stopsData.length > 0 ? (\n          stopsData.map((stop, index) => (\n            <div key={index}>\n              <p>Stop #{index + 1}: Time: {getValue(stop.time)} s, Duration: {getValue(stop.len)} s</p>\n            </div>\n          ))\n        ) : (\n          <p>No existeix</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TestDetails;\n*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}