{"ast":null,"code":"var _jsxFileName = \"/Users/pau/Desktop/GitHub/Ad-hoc_medical_data_processing_toward_integration_with_existing_data_platforms/src/pages/TestDetails.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport database from '../data/database.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // Encontrar el test por su ID\n  const test = database.find(item => item.test.tid === id);\n  if (!test) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test no encontrado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Función para obtener un valor o \"No existeix\" si no está disponible\n  const getValue = value => value !== undefined && value !== null ? value : \"No existeix\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Detalles del Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"General Test Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"O2 Prescribed: \", getValue(test.test.o2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Patient ID: \", getValue(test.test.pid)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Doctor ID: \", getValue(test.test.did)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Pulsiox\\xEDmetre ID: \", getValue(test.test.pulsid)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Initial Basals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Saturation (spo): \", getValue(test.initial.spo)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Heart Rate (hr): \", getValue(test.initial.hr)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dispnea (d): \", getValue(test.initial.d)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fatiga (f): \", getValue(test.initial.f)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Final Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Meters Walked: \", getValue(test.final.meters), \" mts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dispnea (d): \", getValue(test.final.d)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Fatiga (f): \", getValue(test.final.f)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Final Rest SPO2: \", getValue(test.final.end_rest_spo)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Final Rest HR: \", getValue(test.final.end_rest_hr)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Comments: \", getValue(test.final.comment)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Passes to the Cone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), test.pascon.length > 0 ? test.pascon.map((pass, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Pass #\", pass.n, \": Time: \", getValue(pass.t), \" s, SPO2: \", getValue(pass.s), \", HR: \", getValue(pass.h)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No existeix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Stops\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), test.stops.length > 0 ? test.stops.map((stop, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Stop #\", index + 1, \": Time: \", getValue(stop.time), \" s, Duration: \", getValue(stop.len), \" s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No existeix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(TestDetails, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = TestDetails;\nexport default TestDetails;\nvar _c;\n$RefreshReg$(_c, \"TestDetails\");","map":{"version":3,"names":["React","useParams","database","jsxDEV","_jsxDEV","TestDetails","_s","id","test","find","item","tid","children","fileName","_jsxFileName","lineNumber","columnNumber","getValue","value","undefined","o2","pid","did","pulsid","initial","spo","hr","d","f","final","meters","end_rest_spo","end_rest_hr","comment","pascon","length","map","pass","index","n","t","s","h","stops","stop","time","len","_c","$RefreshReg$"],"sources":["/Users/pau/Desktop/GitHub/Ad-hoc_medical_data_processing_toward_integration_with_existing_data_platforms/src/pages/TestDetails.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport database from '../data/database.json';\n\nconst TestDetails = () => {\n    const { id } = useParams();\n    \n    // Encontrar el test por su ID\n    const test = database.find(item => item.test.tid === id);\n\n    if (!test) {\n        return <div>Test no encontrado</div>;\n    }\n\n    // Función para obtener un valor o \"No existeix\" si no está disponible\n    const getValue = (value) => value !== undefined && value !== null ? value : \"No existeix\";\n\n    return (\n        <div>\n            <h2>Detalles del Test</h2>\n            <div>\n                <h3>General Test Data</h3>\n                <p>O2 Prescribed: {getValue(test.test.o2)}</p>\n                <p>Patient ID: {getValue(test.test.pid)}</p>\n                <p>Doctor ID: {getValue(test.test.did)}</p>\n                <p>Pulsioxímetre ID: {getValue(test.test.pulsid)}</p>\n            </div>\n\n            <div>\n                <h3>Initial Basals</h3>\n                <p>Saturation (spo): {getValue(test.initial.spo)}</p>\n                <p>Heart Rate (hr): {getValue(test.initial.hr)}</p>\n                <p>Dispnea (d): {getValue(test.initial.d)}</p>\n                <p>Fatiga (f): {getValue(test.initial.f)}</p>\n            </div>\n\n            <div>\n                <h3>Final Values</h3>\n                <p>Meters Walked: {getValue(test.final.meters)} mts</p>\n                <p>Dispnea (d): {getValue(test.final.d)}</p>\n                <p>Fatiga (f): {getValue(test.final.f)}</p>\n                <p>Final Rest SPO2: {getValue(test.final.end_rest_spo)}</p>\n                <p>Final Rest HR: {getValue(test.final.end_rest_hr)}</p>\n                <p>Comments: {getValue(test.final.comment)}</p>\n            </div>\n\n            <div>\n                <h3>Passes to the Cone</h3>\n                {test.pascon.length > 0 ? (\n                    test.pascon.map((pass, index) => (\n                        <div key={index}>\n                            <p>Pass #{pass.n}: Time: {getValue(pass.t)} s, SPO2: {getValue(pass.s)}, HR: {getValue(pass.h)}</p>\n                        </div>\n                    ))\n                ) : (\n                    <p>No existeix</p>\n                )}\n            </div>\n\n            <div>\n                <h3>Stops</h3>\n                {test.stops.length > 0 ? (\n                    test.stops.map((stop, index) => (\n                        <div key={index}>\n                            <p>Stop #{index + 1}: Time: {getValue(stop.time)} s, Duration: {getValue(stop.len)} s</p>\n                        </div>\n                    ))\n                ) : (\n                    <p>No existeix</p>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default TestDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}